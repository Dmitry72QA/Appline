package ru.appline;


import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import ru.appline.logic.Model;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;

@WebServlet(urlPatterns = "/put")
public class ServletPut extends HttpServlet {
   private static final long serialVersionUID = 1L;

   Model model = Model.getInstance();
   Gson gson = new GsonBuilder().setPrettyPrinting().create();

   @Override
   protected void doPut(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

       StringBuffer stringBuffer = new StringBuffer();
       String line;

       try {
           BufferedReader reader = request.getReader();
           while ((line = reader.readLine()) != null) {
               stringBuffer.append(line);
           }
       } catch (Exception e) {
           System.out.println("Error");
       }

       JsonObject jobi = gson.fromJson(String.valueOf(stringBuffer), JsonObject.class);

       request.setCharacterEncoding("UTF-8");

       response.setContentType("application/json;charset=utf-8");
       PrintWriter printWriter = response.getWriter();

       int id = jobi.get("id").getAsInt();
       String name = jobi.get("name").getAsString();
       String surname = jobi.get("surname").getAsString();
       double salary = jobi.get("salary").getAsInt();

       if(model.updateUser(id, name, surname, salary)) {
           printWriter.print(gson.toJson(model.getUser(id)));
       } else {
           printWriter.print(gson.toJson(gson.fromJson("{\"Message\":\"User" + id + "Not Found\"}", JsonObject.class)));

       }
   }

}


